@model WebApplication4.Models.Guest

@{
    ViewBag.Title = "Signup";
}
@{
    Layout = null;
}

<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Bootstrap demo</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">
</head>
<body>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4" crossorigin="anonymous"></script>
    <section class="vh-100">
        <div class="container-fluid">
            <div class="row">
                <div class="col-sm-6 text-black">

                    <div class="d-flex flex-column align-items-center px-3 mt-3">
                        @using (Html.BeginForm())
                        {
                            <form style="width: 23rem;">

                                <h3 class="fw-normal mb-3 pb-1" style="letter-spacing: 1px;">Signup</h3>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Fname, htmlAttributes: new { @class = "control-label col-md-9" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Fname, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Fname, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Lname, htmlAttributes: new { @class = "control-label col-md-9" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Lname, new { htmlAttributes = new { @class = "form-control " } })
                                        @Html.ValidationMessageFor(model => model.Lname, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                                    </div>
                                </div>


                                <div class="form-group">
                                    @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control", @type = "password" } })
                                        @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.confpassword, htmlAttributes: new { @class = "control-label col-md-9" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.confpassword, new { htmlAttributes = new { @class = "form-control", @type = "password" } })
                                        @Html.ValidationMessageFor(model => model.confpassword, "", new { @class = "text-danger" })
                                    </div>
                                </div>


                                <div class="form-group">
                                    @Html.LabelFor(model => model.gender, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.gender, new List<SelectListItem> {
                                                new SelectListItem { Text = "Male", Value = "Male" },
                                                new SelectListItem { Text = "Female", Value = "Female" }
                                            }, "Select Gender", new { @class = " form-control" })
                                        @Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger  " })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.nationality, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.nationality, GetNationalities(), "Select Nationality", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.nationality, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.birthdate, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.birthdate, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                                        @Html.ValidationMessageFor(model => model.birthdate, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.phone_no, htmlAttributes: new { @class = "control-label col-md-9" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.phone_no, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.phone_no, "", new { @class = "text-danger" })
                                    </div>
                                </div>



                                <div class="form-group">
                                    <div class="pt-1 mb-3">
                                        <button class="btn btn-primary btn-lg btn-block" type="submit">Signup</button>

                                    </div>
                                </div>
                            </form>
                        }
                    </div>
                </div>
                <div class="col-sm-6 px-0 d-none d-sm-block">
                    <img src="~/images/hotel_2 (2).jpg"
                         alt="Signup image" class="w-100 vh-100">
                </div>
            </div>
        </div>
    </section>

</body>
</html>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/bootstrap")
}
@functions {
    private List<SelectListItem> GetNationalities()
    {
        var nationalities = new List<string>
{
            "Afghanistan", "Albania", "Algeria", "Andorra", "Angola", "Antigua and Barbuda", "Argentina", "Armenia",
            "Australia", "Austria", "Azerbaijan", "Bahamas", "Bahrain", "Bangladesh", "Barbados", "Belarus",
            "Belgium", "Belize", "Benin", "Bhutan", "Bolivia", "Bosnia and Herzegovina", "Botswana", "Brazil",
            "Brunei", "Bulgaria", "Burkina Faso", "Burundi", "Cabo Verde", "Cambodia", "Cameroon", "Canada",
            "Central African Republic", "Chad", "Chile", "China", "Colombia", "Comoros", "Congo", "Costa Rica",
            "Croatia", "Cuba", "Cyprus", "Czech Republic", "Denmark", "Djibouti", "Dominica", "Dominican Republic",
            "Ecuador", "Egypt", "El Salvador", "Equatorial Guinea", "Eritrea", "Estonia", "Eswatini", "Ethiopia",
            "Fiji", "Finland", "France", "Gabon", "Gambia", "Georgia", "Germany", "Ghana", "Greece", "Grenada",
            "Guatemala", "Guinea", "Guinea-Bissau", "Guyana", "Haiti", "Honduras", "Hungary", "Iceland", "India",
            "Indonesia", "Iran", "Iraq", "Ireland", "Israel", "Italy", "Jamaica", "Japan", "Jordan", "Kazakhstan",
            "Kenya", "Kiribati", "Korea, North", "Korea, South", "Kosovo", "Kuwait", "Kyrgyzstan", "Laos", "Latvia",
            "Lebanon", "Lesotho", "Liberia", "Libya", "Liechtenstein", "Lithuania", "Luxembourg", "Madagascar",
            "Malawi", "Malaysia", "Maldives", "Mali", "Malta", "Marshall Islands", "Mauritania", "Mauritius",
            "Mexico", "Micronesia", "Moldova", "Monaco", "Mongolia", "Montenegro", "Morocco", "Mozambique",
            "Myanmar", "Namibia", "Nauru", "Nepal", "Netherlands", "New Zealand", "Nicaragua", "Niger", "Nigeria",
            "North Macedonia", "Norway", "Oman", "Pakistan", "Palau", "Palestine", "Panama", "Papua New Guinea",
            "Paraguay", "Peru", "Philippines", "Poland", "Portugal", "Qatar", "Romania", "Russia", "Rwanda",
            "Saint Kitts and Nevis", "Saint Lucia", "Saint Vincent and the Grenadines", "Samoa", "San Marino",
            "Sao Tome and Principe", "Saudi Arabia", "Senegal", "Serbia", "Seychelles", "Sierra Leone", "Singapore",
            "Slovakia", "Slovenia", "Solomon Islands", "Somalia", "South Africa", "South Sudan", "Spain", "Sri Lanka",
            "Sudan", "Suriname", "Sweden", "Switzerland", "Syria", "Taiwan", "Tajikistan", "Tanzania", "Thailand",
            "Timor-Leste", "Togo", "Tonga", "Trinidad and Tobago", "Tunisia", "Turkey", "Turkmenistan", "Tuvalu",
            "Uganda", "Ukraine", "United Arab Emirates", "United Kingdom", "United States", "Uruguay", "Uzbekistan",
            "Vanuatu", "Vatican City", "Venezuela", "Vietnam", "Yemen", "Zambia", "Zimbabwe"
        };

        return nationalities.Select(n => new SelectListItem { Text = n, Value = n }).ToList();
    } }
